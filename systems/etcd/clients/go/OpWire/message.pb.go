// Code generated by protoc-gen-go. DO NOT EDIT.
// source: message.proto

/*
Package OpWire is a generated protocol buffer package.

It is generated from these files:
	message.proto

It has these top-level messages:
	Operation
	Response
*/
package OpWire

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Operation struct {
	// Types that are valid to be assigned to OpType:
	//	*Operation_Put
	//	*Operation_Get
	//	*Operation_Quit
	OpType isOperation_OpType `protobuf_oneof:"op_type"`
}

func (m *Operation) Reset()                    { *m = Operation{} }
func (m *Operation) String() string            { return proto.CompactTextString(m) }
func (*Operation) ProtoMessage()               {}
func (*Operation) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type isOperation_OpType interface{ isOperation_OpType() }

type Operation_Put struct {
	Put *OperationOpPut `protobuf:"bytes,1,opt,name=put,oneof"`
}
type Operation_Get struct {
	Get *OperationOpGet `protobuf:"bytes,2,opt,name=get,oneof"`
}
type Operation_Quit struct {
	Quit *OperationOpQuit `protobuf:"bytes,3,opt,name=quit,oneof"`
}

func (*Operation_Put) isOperation_OpType()  {}
func (*Operation_Get) isOperation_OpType()  {}
func (*Operation_Quit) isOperation_OpType() {}

func (m *Operation) GetOpType() isOperation_OpType {
	if m != nil {
		return m.OpType
	}
	return nil
}

func (m *Operation) GetPut() *OperationOpPut {
	if x, ok := m.GetOpType().(*Operation_Put); ok {
		return x.Put
	}
	return nil
}

func (m *Operation) GetGet() *OperationOpGet {
	if x, ok := m.GetOpType().(*Operation_Get); ok {
		return x.Get
	}
	return nil
}

func (m *Operation) GetQuit() *OperationOpQuit {
	if x, ok := m.GetOpType().(*Operation_Quit); ok {
		return x.Quit
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Operation) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Operation_OneofMarshaler, _Operation_OneofUnmarshaler, _Operation_OneofSizer, []interface{}{
		(*Operation_Put)(nil),
		(*Operation_Get)(nil),
		(*Operation_Quit)(nil),
	}
}

func _Operation_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Operation)
	// op_type
	switch x := m.OpType.(type) {
	case *Operation_Put:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Put); err != nil {
			return err
		}
	case *Operation_Get:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Get); err != nil {
			return err
		}
	case *Operation_Quit:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Quit); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Operation.OpType has unexpected type %T", x)
	}
	return nil
}

func _Operation_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Operation)
	switch tag {
	case 1: // op_type.put
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(OperationOpPut)
		err := b.DecodeMessage(msg)
		m.OpType = &Operation_Put{msg}
		return true, err
	case 2: // op_type.get
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(OperationOpGet)
		err := b.DecodeMessage(msg)
		m.OpType = &Operation_Get{msg}
		return true, err
	case 3: // op_type.quit
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(OperationOpQuit)
		err := b.DecodeMessage(msg)
		m.OpType = &Operation_Quit{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Operation_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Operation)
	// op_type
	switch x := m.OpType.(type) {
	case *Operation_Put:
		s := proto.Size(x.Put)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Operation_Get:
		s := proto.Size(x.Get)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Operation_Quit:
		s := proto.Size(x.Quit)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type OperationOpPut struct {
	Key   uint64  `protobuf:"varint,1,opt,name=key" json:"key,omitempty"`
	Value []byte  `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Start float64 `protobuf:"fixed64,4,opt,name=start" json:"start,omitempty"`
}

func (m *OperationOpPut) Reset()                    { *m = OperationOpPut{} }
func (m *OperationOpPut) String() string            { return proto.CompactTextString(m) }
func (*OperationOpPut) ProtoMessage()               {}
func (*OperationOpPut) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

func (m *OperationOpPut) GetKey() uint64 {
	if m != nil {
		return m.Key
	}
	return 0
}

func (m *OperationOpPut) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *OperationOpPut) GetStart() float64 {
	if m != nil {
		return m.Start
	}
	return 0
}

type OperationOpGet struct {
	Key   uint64  `protobuf:"varint,1,opt,name=key" json:"key,omitempty"`
	Start float64 `protobuf:"fixed64,4,opt,name=start" json:"start,omitempty"`
}

func (m *OperationOpGet) Reset()                    { *m = OperationOpGet{} }
func (m *OperationOpGet) String() string            { return proto.CompactTextString(m) }
func (*OperationOpGet) ProtoMessage()               {}
func (*OperationOpGet) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 1} }

func (m *OperationOpGet) GetKey() uint64 {
	if m != nil {
		return m.Key
	}
	return 0
}

func (m *OperationOpGet) GetStart() float64 {
	if m != nil {
		return m.Start
	}
	return 0
}

type OperationOpQuit struct {
	Msg string `protobuf:"bytes,1,opt,name=msg" json:"msg,omitempty"`
}

func (m *OperationOpQuit) Reset()                    { *m = OperationOpQuit{} }
func (m *OperationOpQuit) String() string            { return proto.CompactTextString(m) }
func (*OperationOpQuit) ProtoMessage()               {}
func (*OperationOpQuit) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 2} }

func (m *OperationOpQuit) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type Response struct {
	ResponseTime float64 `protobuf:"fixed64,1,opt,name=response_time,json=responseTime" json:"response_time,omitempty"`
	Err          string  `protobuf:"bytes,2,opt,name=err" json:"err,omitempty"`
	ClientStart  float64 `protobuf:"fixed64,3,opt,name=client_start,json=clientStart" json:"client_start,omitempty"`
	QueueStart   float64 `protobuf:"fixed64,4,opt,name=queue_start,json=queueStart" json:"queue_start,omitempty"`
	End          float64 `protobuf:"fixed64,5,opt,name=end" json:"end,omitempty"`
	Clientid     uint32  `protobuf:"varint,6,opt,name=clientid" json:"clientid,omitempty"`
	Optype       string  `protobuf:"bytes,7,opt,name=optype" json:"optype,omitempty"`
	Target       string  `protobuf:"bytes,8,opt,name=target" json:"target,omitempty"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Response) GetResponseTime() float64 {
	if m != nil {
		return m.ResponseTime
	}
	return 0
}

func (m *Response) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

func (m *Response) GetClientStart() float64 {
	if m != nil {
		return m.ClientStart
	}
	return 0
}

func (m *Response) GetQueueStart() float64 {
	if m != nil {
		return m.QueueStart
	}
	return 0
}

func (m *Response) GetEnd() float64 {
	if m != nil {
		return m.End
	}
	return 0
}

func (m *Response) GetClientid() uint32 {
	if m != nil {
		return m.Clientid
	}
	return 0
}

func (m *Response) GetOptype() string {
	if m != nil {
		return m.Optype
	}
	return ""
}

func (m *Response) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

func init() {
	proto.RegisterType((*Operation)(nil), "OpWire.Operation")
	proto.RegisterType((*OperationOpPut)(nil), "OpWire.Operation.op_put")
	proto.RegisterType((*OperationOpGet)(nil), "OpWire.Operation.op_get")
	proto.RegisterType((*OperationOpQuit)(nil), "OpWire.Operation.op_quit")
	proto.RegisterType((*Response)(nil), "OpWire.Response")
}

func init() { proto.RegisterFile("message.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 338 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x92, 0xc1, 0x4a, 0xf3, 0x40,
	0x14, 0x85, 0x9b, 0xa6, 0x4d, 0x93, 0xdb, 0x16, 0x7e, 0x86, 0x1f, 0x19, 0xeb, 0xc2, 0x5a, 0x37,
	0x5d, 0x48, 0x14, 0x7d, 0x83, 0x2e, 0xa4, 0xbb, 0xc2, 0x28, 0xb8, 0x0c, 0xd1, 0x5e, 0xc2, 0x60,
	0x93, 0x4c, 0x27, 0x13, 0xa1, 0xaf, 0xe6, 0xeb, 0xf8, 0x22, 0x72, 0xef, 0xc4, 0xe2, 0xa2, 0xb8,
	0xbb, 0xf7, 0xcc, 0x77, 0xce, 0x1c, 0x92, 0x81, 0x69, 0x89, 0x4d, 0x93, 0x17, 0x98, 0x1a, 0x5b,
	0xbb, 0x5a, 0x44, 0x1b, 0xf3, 0xa2, 0x2d, 0x2e, 0x3e, 0xfb, 0x90, 0x6c, 0x0c, 0xda, 0xdc, 0xe9,
	0xba, 0x12, 0x37, 0x10, 0x9a, 0xd6, 0xc9, 0x60, 0x1e, 0x2c, 0xc7, 0xf7, 0x32, 0xf5, 0x4c, 0x7a,
	0x3c, 0x4f, 0x6b, 0x93, 0x99, 0xd6, 0xad, 0x7b, 0x8a, 0x30, 0xa2, 0x0b, 0x74, 0xb2, 0xff, 0x07,
	0x5d, 0x20, 0xd3, 0x05, 0x3a, 0x71, 0x0b, 0x83, 0x7d, 0xab, 0x9d, 0x0c, 0x19, 0x3f, 0x3f, 0x89,
	0x13, 0xb0, 0xee, 0x29, 0x06, 0x67, 0x8f, 0x10, 0xf9, 0xfb, 0xc4, 0x3f, 0x08, 0xdf, 0xf1, 0xc0,
	0xb5, 0x06, 0x8a, 0x46, 0xf1, 0x1f, 0x86, 0x1f, 0xf9, 0xae, 0x45, 0xbe, 0x7c, 0xa2, 0xfc, 0x42,
	0x6a, 0xe3, 0x72, 0xeb, 0xe4, 0x60, 0x1e, 0x2c, 0x03, 0xe5, 0x97, 0xd9, 0x1d, 0xe7, 0x50, 0x85,
	0x93, 0x39, 0x27, 0x1c, 0x17, 0x30, 0xea, 0xca, 0x90, 0xa5, 0x6c, 0x0a, 0xb6, 0x24, 0x8a, 0xc6,
	0x55, 0xc2, 0x87, 0xee, 0x60, 0x70, 0xf1, 0x15, 0x40, 0xac, 0xb0, 0x31, 0x75, 0xd5, 0xa0, 0xb8,
	0x86, 0xa9, 0xed, 0xe6, 0xcc, 0xe9, 0x12, 0xd9, 0x13, 0xa8, 0xc9, 0x8f, 0xf8, 0xac, 0x4b, 0xa4,
	0x38, 0xb4, 0x96, 0x5b, 0x27, 0x8a, 0x46, 0x71, 0x05, 0x93, 0xb7, 0x9d, 0xc6, 0xca, 0x65, 0xbe,
	0x48, 0xc8, 0xae, 0xb1, 0xd7, 0x9e, 0x48, 0x12, 0x97, 0x30, 0xde, 0xb7, 0xd8, 0x62, 0xf6, 0xbb,
	0x2a, 0xb0, 0xe4, 0x01, 0x4a, 0xad, 0xb6, 0x72, 0xc8, 0x07, 0x34, 0x8a, 0x19, 0xc4, 0x3e, 0x41,
	0x6f, 0x65, 0x34, 0x0f, 0x96, 0x53, 0x75, 0xdc, 0xc5, 0x19, 0x7d, 0x0f, 0xea, 0x2f, 0x47, 0x5c,
	0xa3, 0xdb, 0x48, 0x77, 0xb9, 0xa5, 0x3f, 0x1a, 0x7b, 0xdd, 0x6f, 0xab, 0x18, 0xba, 0xc7, 0xf2,
	0x1a, 0xf1, 0xdb, 0x79, 0xf8, 0x0e, 0x00, 0x00, 0xff, 0xff, 0xac, 0x5b, 0xc3, 0x06, 0x4c, 0x02,
	0x00, 0x00,
}
