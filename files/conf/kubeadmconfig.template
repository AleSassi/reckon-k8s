apiVersion: kubeadm.k8s.io/v1beta3
kind: ClusterConfiguration
kubernetesVersion: v1.29.2
clusterName: "cl"
controlPlaneEndpoint: "" # Must be added at runtime!
apiServer:
  certSANs:
    - localhost
    - 127.0.0.1
  extraArgs:
    runtime-config: ""
controllerManager:
  extraArgs:
    enable-hostpath-provisioner: "true"
scheduler:
  extraArgs:
networking:
  podSubnet: 10.244.0.0/16
  serviceSubnet: 10.96.0.0/16
---
apiVersion: kubeadm.k8s.io/v1beta3
kind: InitConfiguration
bootstrapTokens:
- token: aaabbb.0123456789cccddd # we use a well know token for TLS bootstrap
localAPIEndpoint:
  advertiseAddress: "" # This is the node IP address, to be changed at runtime
  bindPort: 6443
nodeRegistration:
  criSocket: unix:///run/containerd/containerd.sock
  kubeletExtraArgs:
    node-ip: "" # Must be added at runtime!
    provider-id: kind://docker/cl/ # Append the node name here!
    node-labels: ""
---
# no-op entry that exists solely so it can be patched
apiVersion: kubeadm.k8s.io/v1beta3
kind: JoinConfiguration
# Add the below snippet at runtime for the control plane only!
#controlPlane:
#  localAPIEndpoint:
#    advertiseAddress: "" # The IP address of the control plane node
#    bindPort: 6443
nodeRegistration:
  criSocket: unix:///run/containerd/containerd.sock
  kubeletExtraArgs:
    node-ip: "" # Must be added at runtime!
    provider-id: kind://docker/cl/ # Append the node name here!
    node-labels: ""
discovery:
  bootstrapToken:
    apiServerEndpoint: "" # The CPEndpoint, must be replaced at runtime!
    token: aaabbb.0123456789cccddd # we use a well know token for TLS bootstrap
    unsafeSkipCAVerification: true
---
apiVersion: kubelet.config.k8s.io/v1beta1
kind: KubeletConfiguration
cgroupDriver: systemd # Replace with the ACTUAL cgroup driver for Docker in use in your system!!
cgroupRoot: /kubelet
failSwapOn: false
# disable disk resource management by default
# kubelet will see the host disk that the inner container runtime
# is ultimately backed by and attempt to recover disk space. we don't want that.
imageGCHighThresholdPercent: 100
evictionHard:
  nodefs.available: "0%"
  nodefs.inodesFree: "0%"
  imagefs.available: "0%"
---
apiVersion: kubeproxy.config.k8s.io/v1alpha1
kind: KubeProxyConfiguration
mode: iptables
iptables:
  minSyncPeriod: 1s
conntrack:
# Skip setting sysctl value "net.netfilter.nf_conntrack_max"
# It is a global variable that affects other namespaces
  maxPerCore: 0